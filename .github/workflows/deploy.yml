name: Deploy Maven Projects
on: 
  push:
    tags:
      - v*

jobs:
  test: 
    runs-on: ubuntu-latest
    name: Test Maven Project
    steps:
    - uses: actions/checkout@master
    - name: Cache Maven archetype
      id: cache-maven
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-jdk-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Setup JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: test project 
      run: mvn -DMAIL_HOST=${{secrets.MAIL_HOST}} -DMAIL_PORT=${{secrets.MAIL_PORT}} -DMAIL_USERNAME=${{secrets.MAIL_USERNAME}} -DMAIL_PASSWORD=${{secrets.MAIL_PASSWORD}} -DMAIL_PTL=${{secrets.MAIL_PTL}} -DMAIL_PTL_EBLE=${{secrets.MAIL_PTL_EBLE}} -DMAIL_CNT_TMOUT=${{secrets.MAIL_CNT_TMOUT}} clean verify

  test-integration: 
    runs-on: ubuntu-latest
    name: Test integration Project
    steps:
    - uses: actions/checkout@master
    - name: Cache Maven archetype
      id: cache-maven
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-jdk-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Setup JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Maven Package
      run: mvn -B -DskipTests -DMAIL_HOST=${{secrets.MAIL_HOST}} -DMAIL_PORT=${{secrets.MAIL_PORT}} -DMAIL_USERNAME=${{secrets.MAIL_USERNAME}} -DMAIL_PASSWORD=${{secrets.MAIL_PASSWORD}} -DMAIL_PTL=${{secrets.MAIL_PTL}} -DMAIL_PTL_EBLE=${{secrets.MAIL_PTL_EBLE}} -DMAIL_CNT_TMOUT=${{secrets.MAIL_CNT_TMOUT}} clean package
    - name: Maven Verify
      run: mvn -B -Pintegration-test -DMAIL_HOST=${{secrets.MAIL_HOST}} -DMAIL_PORT=${{secrets.MAIL_PORT}} -DMAIL_USERNAME=${{secrets.MAIL_USERNAME}} -DMAIL_PASSWORD=${{secrets.MAIL_PASSWORD}} -DMAIL_PTL=${{secrets.MAIL_PTL}} -DMAIL_PTL_EBLE=${{secrets.MAIL_PTL_EBLE}} -DMAIL_CNT_TMOUT=${{secrets.MAIL_CNT_TMOUT}} clean verify

  build:
    name: Build Maven Project
    runs-on: ubuntu-latest
    needs: [test, test-integration]   
    steps:
    - uses: actions/checkout@master
    - name: Cache Maven archetype
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Setup JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build & Test project 
      run: mvn -f pom.xml -DMAIL_HOST=${{secrets.MAIL_HOST}} -DMAIL_PORT=${{secrets.MAIL_PORT}} -DMAIL_USERNAME=${{secrets.MAIL_USERNAME}} -DMAIL_PASSWORD=${{secrets.MAIL_PASSWORD}} -DMAIL_PTL=${{secrets.MAIL_PTL}} -DMAIL_PTL_EBLE=${{secrets.MAIL_PTL_EBLE}} -DMAIL_CNT_TMOUT=${{secrets.MAIL_CNT_TMOUT}} clean install
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: target/music-all-back.jar

  hadolint:
   name: Test Dockerfile
   runs-on: ubuntu-latest
   steps:
   - name: Checkout Source
     uses: actions/checkout@master
   - name: Install Docker
     run: curl -sSL https://get.docker.com/ | sh
   - name: Run hadolint
     env:
       MAIL_HOST: ${{ secrets.MAIL_HOST }}
       MAIL_PORT: ${{ secrets.MAIL_PORT }}
       MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
       MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
       MAIL_PTL: ${{ secrets.MAIL_PTL }}
       MAIL_PTL_EBLE: ${{ secrets.MAIL_PTL_EBL }}
       MAIL_CNT_TMOUT: ${{ secrets.MAIL_CNT_TMOUT }}
     run: |
       export MAIL_HOST=$MAIL_HOST
       export MAIL_PORT=$MAIL_PORT
       export MAIL_USERNAME=$MAIL_USERNAME
       export MAIL_PASSWORD=$MAIL_PASSWORD
       export MAIL_PTL=$MAIL_PTL
       export MAIL_PTL_EBLE=$MAIL_PTL_EBLE
       export MAIL_CNT_TMOUT=$MAIL_CNT_TMOUT
       docker run --rm -i hadolint/hadolint < Dockerfile

  heroku:
    name: Deploy to Heroku from github registry
    runs-on: ubuntu-latest
    needs: hadolint
    steps:
    - uses: actions/checkout@master
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
    - name: push to heroku
      env:
        MAIL_HOST: ${{ secrets.MAIL_HOST }}
        MAIL_PORT: ${{ secrets.MAIL_PORT }}
        MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        MAIL_PTL: ${{ secrets.MAIL_PTL }}
        MAIL_PTL_EBLE: ${{ secrets.MAIL_PTL_EBL }}
        MAIL_CNT_TMOUT: ${{ secrets.MAIL_CNT_TMOUT }}
        HEROKU_REGISTRY_URL: registry.heroku.com
        HEROKU_TOKEN : ${{ secrets.HEROKU_API_KEY }}
      run : |
        echo $HEROKU_TOKEN | docker login --username=_ $HEROKU_REGISTRY_URL --password-stdin
        export HEROKU_API_KEY=$HEROKU_TOKEN
        heroku container:login
        heroku logs --app ${{ secrets.HEROKU_APP }}
        heroku container:push web --app ${{ secrets.HEROKU_APP }}
        heroku container:release web --app ${{ secrets.HEROKU_APP }}
        heroku ps:scale web=1 --app ${{ secrets.HEROKU_APP }}
